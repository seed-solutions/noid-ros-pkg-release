<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:macro name="gazebo_link_reference" params="link_name mu1:=0.9 mu2:=0.9" >
    <gazebo reference="${link_name}">
      <mu1>${mu1}</mu1>
      <mu2>${mu2}</mu2>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="gazebo_joint_reference" params="joint_name implicitspringdamper:=0" >
    <gazebo reference="${joint_name}">
      <implicitSpringDamper>${implicitspringdamper}</implicitSpringDamper>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="gazebo_transmission" params="joint_name" >
    <transmission name="${joint_name}_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${joint_name}">
        <!-- dupricated in kinetic -->
        <!--hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface-->
        <!--hardwareInterface>EffortJointInterface</hardwareInterface-->
        <hardwareInterface>VelocityJointInterface</hardwareInterface>
      </joint>
      <actuator name="${joint_name}_motor">
        <!-- dupricated in kinetic -->
        <!--hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface-->
        <!--hardwareInterface>EffortJointInterface</hardwareInterface-->
        <hardwareInterface>VelocityJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>
    <xacro:gazebo_joint_reference joint_name="${joint_name}" />
  </xacro:macro>

  <xacro:macro name="gazebo_trajectory_controller" params="namespace:=/" >
    <gazebo>
      <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
        <robotNamespace>${namespace}</robotNamespace>
        <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
      </plugin>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="gazebo_base_controller" params="base_frame com_topic:=/cmd_vel odom_topic:=/odom odom_frame:=odom odom_rate:=20" >
    <!-- Base control -->
    <gazebo>
      <!--plugin name="cmd_vel_controller" filename="libgazebo_ros_planar_force_move.so"-->
      <plugin name="cmd_vel_controller" filename="libgazebo_ros_planar_force_move.so">
        <commandTopic>cmd_vel</commandTopic>
        <odometryTopic>odom</odometryTopic>
        <odometryFrame>odom</odometryFrame>
        <odometryRate>40.0</odometryRate>
        <robotBaseFrame>${base_frame}</robotBaseFrame>
        <useForceFeedback>true</useForceFeedback>
        <appliedForceLink>${base_frame}</appliedForceLink>
        <forceGainX>24000</forceGainX>
        <forceGainY>24000</forceGainY>
        <forceGainRot>6000</forceGainRot>
      </plugin>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="gazebo_laser_sensor" params="link_name frame_name topic_name:=scan" >
    <!-- hokuyo -->
    <gazebo reference="${link_name}">
      <sensor type="ray" name="head_hokuyo_sensor">
        <pose>0 0 0 0 0 0</pose>
        <visualize>false</visualize>
        <update_rate>40</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>1000</samples>
              <resolution>1</resolution>
              <min_angle>-2.35619449</min_angle>
              <max_angle>2.35619449</max_angle>
            </horizontal>
          </scan>

          <range>
            <min>0.5</min>
            <max>30.0</max>
            <resolution>0.01</resolution>
          </range>

          <noise>
            <type>gaussian</type>
                 <!--
                 Noise parameters based on published spec for Hokuyo laser
                 achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
                 stddev of 0.01m will put 99.7% of samples within 0.03m of the true
                 reading.
                 -->
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
          <topicName>${topic_name}</topicName>
          <frameName>${frame_name}</frameName>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="gazebo_depth_camera"
               params="link_name frame_name camera_name:=camera" >
    <gazebo reference="${link_name}">
      <sensor type="depth" name="camera1">
        <update_rate>1</update_rate>
        <camera name="head">
          <!--
               <noise>
               <type>gaussian</type>
               <mean>0.0</mean>
               <stddev>0.007</stddev>
               </noise>
          -->
          <horizontal_fov>1.7</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.15</near>
            <far>300</far>
          </clip>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_depth_camera.so">
          <alwaysOn>true</alwaysOn>
          <!-- Keep this zero, update_rate will control the frame rate -->
          <updateRate>0.0</updateRate>
          <cameraName>${camera_name}</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <depthImageTopicName>depth/image_raw</depthImageTopicName>
          <!-- neither camera info is getting published, frame_id is empty
               in points and both image headers -->
          <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
          <pointCloudTopicName>points</pointCloudTopicName>
          <frameName>${frame_name}</frameName>
          <!-- TODO(lucasw) is this used by depth camera at all? -->
          <hackBaseline>0.07</hackBaseline>
          <pointCloudCutoff>0.001</pointCloudCutoff>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="gazebo_camera"
               params="link_name frame_name camera_name:=camera" >
    <!-- camera -->
    <gazebo reference="${link_name}">
      <sensor type="camera" name="camera1">
        <update_rate>15.0</update_rate>
        <camera name="head">
          <horizontal_fov>1.7</horizontal_fov> <!-- -->
          <image>
            <width>800</width>
            <height>800</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.15</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
                 <!--Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>${camera_name}</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>${frame_name}</frameName>
               <!--setting hackBaseline to anything but 0.0 will cause a misalignment
               between the gazebo sensor image and the frame it is supposed to
               be attached to-->
          <hackBaseline>0.0</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
          <CxPrime>0</CxPrime>
          <Cx>0.0</Cx>
          <Cy>0.0</Cy>
          <focalLength>0.0</focalLength>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro>

</robot>
